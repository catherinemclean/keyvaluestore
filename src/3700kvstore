#!/usr/bin/env python

import json
import select
import sys
import time

from replica import Replica
from constants import *

# Your ID number
my_id = sys.argv[1]

# The ID numbers of all the other replicas
replica_ids = sys.argv[2:]

rep = Replica(my_id, replica_ids)

while True:
	ready = select.select([rep.sock], [], [], 0.1)[0]

	if rep.sock in ready:
		msg_raw = rep.sock.recv(32768)

		if len(msg_raw) == 0: continue
		msg = json.loads(msg_raw)
		msg_type = msg['type']
		term = msg['term']

		if rep.current_state == LEADER:
			if msg_type in [GET, PUT]:
				rep.send_append_ent(msg)

			elif msg_type == OK:
				rep.handle_ok(msg)

			elif msg_type == FAIL:
				rep.handle_fail(msg)

			# vote reply from replica with greater term ==> rightful leader just last to respond to vote request, still become follower
			elif msg_type == VOTE_REPLY and rep.update_term(term):
				# continue # if already leader, could just be delayed vote, so just ignore
				rep.become_follower()
				rep.leader_id = 'FFFF'

			elif msg_type == VOTE_REQ:
				if rep.update_term(term) and rep.check_stale_followers(): # todo: AND haven't heard from n/2 followers within election timeout
					rep.become_follower()
					rep.leader_id = 'FFFF'
					rep.handle_vote_request(msg)
				# else: TODO update term and remain leader

			# APPEND_ENT msg type and better term
			elif msg_type == APPEND_ENT and rep.update_term(term):
				rep.become_follower()
				rep.recv_append_ent(msg)
				# TODO: if not better term and leader rejects APPEND_ENT, then next heartbeat will just serve as FAIL msg? or move to leader condition in recv_append_ent and respond with fail?

		else: # either follower or candidate
			# Redirect get() and put() from clients to leader
			if msg_type in [GET, PUT]:
				rep.redirect_client(msg)

			elif msg_type == APPEND_ENT:
				rep.recv_append_ent(msg)

			elif msg_type == VOTE_REQ:
				rep.handle_vote_request(msg)

			elif msg_type == VOTE_REPLY:
				if msg['vote'] and rep.current_state == CANDIDATE:
						rep.tally_votes()
				elif rep.update_term(term):
					rep.become_follower()
				else:
					continue


	clock = time.time()
	if rep.current_state == LEADER:
		if clock - rep.append_last > .1:
			rep.send_append_ent()

	#checks if received an Append RPC message in election timeout frame
	elif clock - rep.last > rep.election_timeout:
		rep.become_candidate()

